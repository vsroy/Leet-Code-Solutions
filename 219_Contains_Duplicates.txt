class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) 
    {
         if((k == 0) || (nums.size() == 0)){return false;}
          
            int i = 0;
            int leo = 0;
            int koi = 0;
            int bane = 10000;
        
            int A[nums.size()];
            for(int k = 0; k < nums.size(); ++ k){A[k] = nums[k];}
            sort(nums.begin(), nums.end());
        
            for(int b = 0; b < nums.size()-1; ++b){if(nums[b] == nums[b+1]){++leo;}}
            if(leo == 0){return false;}
        
            for(int k = 0; k < nums.size(); ++ k){nums[k] = A[k];}
            do
            {
                koi = nums[i];
                for(int j = i+1; j < nums.size(); ++j)
                {      if(koi == nums[j])
                       {if(j-i < bane)
                       {bane = j-i;}
                       if(bane <= k)
                       {return true;}}
                }
                ++i;
            }while(i < nums.size());
        return false;
    }
};